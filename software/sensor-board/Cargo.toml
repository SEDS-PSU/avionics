[package]
# TODO(1) fix `authors` and `name` if you didn't use `cargo-generate`
authors = ["Lachlan Sneff <lachlan@charted.space>"]
name = "sensor-board"
edition = "2021"
version = "0.1.0"

[dependencies]
defmt = "0.3.0"
defmt-rtt = "0.3.0"
panic-probe = { version = "0.3.0", features = ["print-defmt"] }
cortex-m-rtic = "1"
cortex-m = "0.7.4"
fugit = "0.3.5"
fixed = "1.15.0"
bxcan = "0.6.2"
nb = "1.0"
shared = { path = "../shared" }
heapless = "0.7.9"
embedded-hal = "0.2.6"
embedded-dma = "0.1.2"
postcard = { git = "https://github.com/lachlansneff/postcard.git", branch = "max-serialization-size" }
mcp96x = { path = "../mcp96x" }
shared-bus = { version = "0.2.2", features = ["cortex-m"] }

[dependencies.stm32f1xx-hal]
version = "0.9.0"
features = ["rt", "stm32f105", "rtic"]


# cargo build/run
[profile.dev]
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = "s" # <-
overflow-checks = true # <-

# cargo test
[profile.test]
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = "s" # <-
overflow-checks = true # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = "s" # <-
overflow-checks = false # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = "s" # <-
overflow-checks = false # <-

# uncomment this to switch from the crates.io version of defmt to its git version
# check app-template's README for instructions
# [patch.crates-io]
# defmt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-rtt = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# defmt-test = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
# panic-probe = { git = "https://github.com/knurling-rs/defmt", rev = "use defmt version reported by `probe-run --version`" }
